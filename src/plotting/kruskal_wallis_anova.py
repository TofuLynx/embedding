import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from scipy import stats
import scikit_posthocs as sp

# A1
# labels = ['N8', 'N16', 'N32', 'N64']
# title = 'A1'
# list_set_epsilons = [
#     [1.0, 1.0, 1.0, 1.0, 1.0],
#     [1.069745339063699, 1.092361554481774, 1.0401612648181484, 1.024987806680736, 1.092361554481774],
#     [1.9672283318399104, 2.000208156727025, 1.5057984665883457, 1.7313780537119778, 1.7583356077077361],
#     [2.0219766490363518, 2.0083955641477678, 2.050651504630772, 1.9425289723714714, 2.0143853558614717]
# ]

# A2B3N32B0.2
# labels = ['lessDmoreS', 'mediumDmediumS', 'moreDlessS']
# title = 'A2B3N32B0.2'
# list_set_epsilons = [
#     [1.3499979263151332, 1.4052383661831214, 1.3767810617925065, 1.2246383166488921, 1.305776027695795],
#     [1.2995504139539467, 1.404756216444296, 1.2508234046861144, 1.2726522028350036, 1.3711890363293475],
#     [1.190339028084757, 1.1777285234088037, 1.3251138101252673, 1.239663511129278, 1.3387415243139376]
#     ]

# A2B3N32B0.5
# labels = ['lessDmoreS', 'mediumDmediumS', 'moreDlessS']
# title = 'A2B3N32B0.5'
# list_set_epsilons = [
#     [1.3223924568287806, 1.2687432067032371, 1.220955076787497, 1.254966363250258, 1.2938492909112813],
#     [1.2019484617437721, 1.2624076702069662, 1.1803388633948861, 1.2035769093379443, 1.2273742495494546],
#     [1.2443007122010312, 1.196461316049709, 1.2400360986124226, 1.1842034194065967, 1.2859427569109037]
#     ]


# A2B3N32B0.8
# labels = ['lessDmoreS', 'mediumDmediumS', 'moreDlessS']
# title = 'A2B3N32B0.8'
# list_set_epsilons = [
#     [11.64880622819096, 3.218488975672744, 4.19978909323371, 2.4222216462067827, 1.3945702864495817],
#     [1.556664032973834, 1.3663118105123084, 1.5586430764381378, 1.680835551796745, 1.5913162723285534],
#     [1.4042623555013878, 1.762925100716513, 5.616428969987258, 1.4656917356032806, 1.154926574216331]]

# A2B3N64B0.2
# labels = ['lessDmoreS', 'mediumDmediumS', 'moreDlessS']
# title = 'A2B3N64B0.2'
# list_set_epsilons = [
#     [6.2822047738081395, 1.8638804611036361, 1.9047437553733515, 2.422472141548823, 2.2032959794790696],
#     [1.5575930523578907, 2.0030329838314995, 3.1676934778763344, 2.9871419348114188, 2.7198452481964237],
#     [3.095781529782441, 2.6553700990395632, 2.361810872572806, 1.9441985959597363, 3.3874699973609315]
#     ]

# A2B3N64B0.5
# labels = ['lessDmoreS', 'mediumDmediumS', 'moreDlessS']
# title = 'A2B3N64B0.5'
# list_set_epsilons = [
#     [1.5047783802519876, 1.5424474973680935, 1.5397188105542317, 1.4446165311565198, 1.4851902111804731],
#     [1.4858362812934982, 1.4889654752248092, 1.504781330353911, 1.4098188899588118, 1.4602483148388254],
#     [1.5801374259874152, 1.528434198773743, 1.618441431572883, 1.3962855707332278, 1.5321040040763054]
#     ]


# A2B3N64B0.8
# labels = ['lessDmoreS', 'mediumDmediumS', 'moreDlessS']
# title = 'A2B3N64B0.8'
# list_set_epsilons = [
#     [float('inf'), float('inf'), float('inf'), float('inf'), float('inf')],
#     [float('inf'), float('inf'), float('inf'), float('inf'), float('inf')],
#     [float('inf'), float('inf'), float('inf'), 1.9884989104451705, float('inf')]
#     ]


# B2N16
# labels = ['default', 'clique', 'layout']
# title = 'B2N16'
# list_set_epsilons = [
#     [1.0568713785067598, 1.0393077920791243, 1.0717989664330105, 1.0174972218859963, 1.0984542789970648],
#     [1.092361554481774, 1.092361554481774, 1.1550046370248923, 1.1263482082890073, 1.092361554481774],
#     [1.069745339063699, 1.0717989664330105, 1.0617306209896549, 1.092361554481774, 1.1263482082890073]
# ]

# B2N32
# labels = ['default', 'clique', 'layout']
# title = 'B2N32'
# list_set_epsilons = [
#     [1.1648830986803027, 1.274607461666451, 1.2746124354082478, 1.2901197218104328, 1.251599560259116],
#     [1.3164838774831533, 1.3204491225105135, 1.3812107507228906, 1.3163825613411466, 1.253686482337723],
#     [1.250487660661036, 1.3262523046942487, 1.3013875124919834, 1.2479030749457698, 1.275322497071187]
#     ]

# B2N64
# labels = ['default', 'clique', 'layout']
# title = 'B2N64'
# list_set_epsilons = [
#     [1.59319592598288, 1.5475698605999058, 1.5676345089256754, 1.4870048002959697, 1.3348663638196163],
#     [1.5463019291059412, 1.5097302754928548, 1.427913587624222, 1.576689006928445, 1.517809459126627],
#     [1.453708008958359, 1.3892770097800016, 1.4641989171658787, 1.4721139985246516, 1.4594746118799953]
# ]

# B4N16
labels = ['default', 'long', 'pause', 'quench']
title = 'B4N16'
list_set_epsilons = [
    [1.092361554481774, 1.0174972218859963, 1.092361554481774, 1.0717989664330105, 1.0984542789970648],
    [1.0745464054191984, 1.0, 1.0697773251747045, 1.1024229279374809, 1.0717989664330105],
    [1.0617306209896549, 1.0721887251507554, 1.0070189250799315, 1.069745339063699, 1.0743999075141863],
    [1.069745339063699, 1.092361554481774, 1.0995747506079512, 1.135479930116604, 1.069745339063699]
    ]

# B4N32
# labels = ['default', 'long', 'pause', 'quench']
# title = 'B4N32'
# list_set_epsilons = [
#     [1.3517850518147483, 1.2351620051331451, 1.2419806167336755, 1.253449932867132, 1.2972976373744176],
#     [1.2773084389374618, 1.2685859412167662, 1.282440675632727, 1.2993723060342706, 1.2698253194462126],
#     [1.2235341061967722, 1.226120904434251, 1.2279227738062093, 1.1846873126415314, 1.2562894271342242],
#     [1.2811447849206972, 1.3075712381393696, 1.3033753143749904, 1.2859913292662528, 1.3053195063580334]
# ]

# B4N64
# labels = ['default', 'long', 'pause', 'quench']
# title = 'B4N64'
# list_set_epsilons = [
#     [1.5172127715152381, 1.4650921665719863, 1.578786888567411, 1.5375728717289225, 1.4263595347128148],
#     [1.478730296108486, 1.3949736950202156, 1.5101094100342656, 1.4832660350964741, 1.5477821575078923],
#     [1.4376387082399167, 1.5470916940262103, 1.5018400284840752, 1.4852721388950165, 1.5165228682120504],
#     [1.4690634250105148, 1.3928715064121016, 1.4791407298039705, 1.3740265914395953, 1.4686016146384933]
# ]

# A3N16
# labels = ['diversified', 'correlated', 'industry_diversified', 'industry_correlated']
# title = 'A3N16'
# list_set_epsilons = [
#     [1.0252990521071133, 1.0, 1.0252990521071133, 1.0398904698739035, 1.0252990521071133],
#     [1.0184926535860195, 1.0138186993022122, 1.0183204025272334, 1.0146279197185049, 1.0099975432282287],
#     [1.024987806680736, 1.0717989664330105, 1.0, 1.0, 1.0617306209896549],
#     [1.0807158822709637, 1.0628970589064997, 1.0355813783849832, 1.0017552368401965, 1.0628970589064997]
#     ]

# A3N32
# labels = ['diversified', 'correlated', 'industry_diversified', 'industry_correlated']
# title = 'A3N32'
# list_set_epsilons = [
#     [1.2742794349447089, 1.2884689100696118, 1.2773672514016263, 1.2753373162832464, 1.2330931799174467],
#     [1.1022627340052333, 1.1040043866764444, 1.107290257993464, 1.1095633593648768, 1.1030412770134137],
#     [1.3211551275053297, 1.3375576459869927, 1.3547221236814633, 1.273461244430681, 1.3830779041288135],
#     [1.3999197317543246, 1.3725234793287475, 1.3100230533839459, 1.268457109826973, 1.317538884521333]
#     ]

# A3N64
labels = ['diversified', 'correlated', 'industry_diversified', 'industry_correlated']
title = 'A3N64'
list_set_epsilons = [
    [1.5896707140453368, 1.692115874229774, 1.5797159691954805, 1.544775608544733, 1.6306603596458091],
    [1.1543709462719736, 1.1808555712929112, 1.1965189175682915, 1.2054586123321147, 1.1451164825300342],
    [1.480961077552874, 1.439785049594824, 1.49521532395618, 1.4271771706844985, 1.4703703494825286],
    [1.712487317392762, 1.8350719836858504, 1.8867041380744307, 1.6599045066687057, 1.8170283525044424]
    ]




dict = {'tries': [], 'groups': [], 'y': []}

for i in range(len(list_set_epsilons)):
    for j in range(len(list_set_epsilons[i])):
        dict['tries'].append(j)
        dict['groups'].append(labels[i])
        dict['y'].append(list_set_epsilons[i][j])

df = pd.DataFrame.from_dict(dict)
print(df)

print('Results of Kruskal-Wallis One-way ANOVA:')

H, p = stats.kruskal(*list_set_epsilons)

print(f'H statistic:\t{H}\np-value:\t{p}')

if p > 0.05:
    print('The null hypothesis was not rejected!')
    exit(0)


print('Null hypothesis rejected! Now performing pairwise comparison with Dunn\'s test')

results = sp.posthoc_conover(
    df, val_col='y', group_col='groups', p_adjust='bonferroni', sort=False)

print(results)

for i in range(len(labels)):
    for j in range(i+1, len(labels)):
        x = labels[i]
        y = labels[j]
        if results[x][y] < 0.05:
            print(f'{x} and {y} ARE significantly different!')
        if results[x][y] > 0.05:
            print(f'{x} and {y} are NOT!')
